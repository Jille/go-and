// +build arm64,!purego

#include "textflag.h"

// func andNEON(dst *byte, a *byte, b *byte, l uint64)
TEXT Â·andNEON(SB), NOSPLIT, $0-32
    MOVD dst+0(FP), R0
    MOVD a+8(FP), R1
    MOVD b+16(FP), R2
    MOVD l+24(FP), R3

loop:
    VLD1.P 64(R1), [ V0.B16,  V1.B16,  V2.B16,  V3.B16]
    VLD1.P 64(R2), [ V4.B16,  V5.B16,  V6.B16,  V7.B16]
    VLD1.P 64(R1), [ V8.B16,  V9.B16, V10.B16, V11.B16]
    VLD1.P 64(R2), [V12.B16, V13.B16, V14.B16, V15.B16]
    VLD1.P 64(R1), [V16.B16, V17.B16, V18.B16, V19.B16]
    VLD1.P 64(R2), [V20.B16, V21.B16, V22.B16, V23.B16]
    VLD1.P 64(R1), [V24.B16, V25.B16, V26.B16, V27.B16]
    VLD1.P 64(R2), [V28.B16, V29.B16, V30.B16, V31.B16]

    VAND  V0.B16,  V4.B16,  V0.B16
    VAND  V1.B16,  V5.B16,  V1.B16
    VAND  V2.B16,  V6.B16,  V2.B16
    VAND  V3.B16,  V7.B16,  V3.B16

    VAND  V8.B16, V12.B16,  V8.B16
    VAND  V9.B16, V13.B16,  V9.B16
    VAND V10.B16, V14.B16, V10.B16
    VAND V11.B16, V15.B16, V11.B16

    VAND V16.B16, V20.B16, V16.B16
    VAND V17.B16, V21.B16, V17.B16
    VAND V18.B16, V22.B16, V18.B16
    VAND V19.B16, V23.B16, V19.B16

    VAND V24.B16, V28.B16, V24.B16
    VAND V25.B16, V29.B16, V25.B16
    VAND V26.B16, V30.B16, V26.B16
    VAND V27.B16, V31.B16, V27.B16

    VST1.P [ V0.B16,  V1.B16,  V2.B16,  V3.B16], 64(R0)
    VST1.P [ V8.B16,  V9.B16, V10.B16, V11.B16], 64(R0)
    VST1.P [V16.B16, V17.B16, V18.B16, V19.B16], 64(R0)
    VST1.P [V24.B16, V25.B16, V26.B16, V27.B16], 64(R0)

    SUBS $1, R3, R3
    CBNZ R3, loop
    
    RET
